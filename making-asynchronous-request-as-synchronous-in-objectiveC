//performs the blocking operation for the asynchronous REST API call and returns the data received from the server
-(NSString*) getSynchronousResponse : (NSMutableURLRequest*) request {
    NSString* jsonResponse = nil;
    
    //creating the semaphore to make sure you process ahead only when the reponse is received from the server
    dispatch_semaphore_t semaphore = dispatch_semaphore_create(0);
    
    //creatinng the session to get the json response
    __block NSData* responseData = nil;
    NSURLSession *session = [NSURLSession sessionWithConfiguration:[NSURLSessionConfiguration defaultSessionConfiguration]];
    [[session dataTaskWithRequest:request completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
        responseData = data;
        //signal the wait operation by incrementing the semaphore
        dispatch_semaphore_signal(semaphore);
    }] resume];
    
    //halting the process till the signal is sent - decrements the semaphore
    // If the resulting value is less than zero, this function waits in FIFO order for a signal to occur before returning.
    dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER);
    
    //check if the server received the correct response
    if (responseData != nil) {
        jsonResponse = [[NSString alloc] initWithData:responseData encoding:NSASCIIStringEncoding];
    }

    NSLog(@"This is synchronous Response : %@",jsonResponse);
    return jsonResponse;
}
